@model IEnumerable<IGrouping<string, SushiWebsite.Models.Dish>>

@{
    ViewData["Title"] = "Menu";
}

<style>
    .toast-container {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
    }

    .toast {
        min-width: 250px;
        background-color: #28a745;
        color: white;
        border-radius: 5px;
        margin-top: 10px;
    }

    .category-arrow i {
        color: white;
        transition: transform 0.3s ease;
    }

    .rotate-180 {
        transform: rotate(180deg);
    }

    .category-title button {
        background-color: #FF7043;
        color: white;
        border-radius: 5px;
        padding: 10px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        border: none;
        transition: background-color 0.3s ease;
    }

        .category-title button:hover {
            background-color: #FF5722;
        }

    .btn-view-cart {
        background-color: #4CAF50;
        color: white;
        border-radius: 5px;
        padding: 10px 20px;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-view-cart:hover {
            background-color: #388E3C;
        }

    .collapse-content {
        display: none;
    }

    .collapse-content-show {
        display: block;
    }
</style>

<h1 class="text-center my-4">Menu</h1>

<!-- Nút View Your Cart -->
<button id="viewCartBtn" class="btn btn-success btn-sm mt-3 mb-5">
    View Your Cart!
    @if (ViewBag.CartItemCount > 0)
    {
        <span class="badge bg-danger ms-2">@ViewBag.CartItemCount</span>
    }
</button>

<!-- Modal hiển thị giỏ hàng -->
<div id="cartModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cart</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="cartContent">Loading...</div>
            </div>
        </div>
    </div>
</div>

@foreach (var category in Model)
{
    <h3 class="category-title">
        <button class="toggle-category" data-category="collapseCategory-@category.Key">
            <span>@category.Key</span>
            <span class="category-arrow"><i class="bi bi-caret-down-fill"></i></span>
        </button>
    </h3>

    <div id="collapseCategory-@category.Key" class="collapse-content">
        <ul class="list-group mb-4">
            @foreach (var dish in category)
            {
                <li class="list-group-item d-flex align-items-center">
                    <img src="@dish.ImageUrl" alt="@dish.Name" class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover;">
                    <div class="flex-grow-1">
                        <h6 class="mb-1">@dish.Name</h6>
                        <small>@Html.Raw(dish.Description.Replace("\n", "<br>"))</small>
                    </div>
                    <div>
                        <form method="post" asp-action="AddToCart" class="add-to-cart-form mt-1">
                            <input type="hidden" name="id" value="@dish.Id" />

                            @if (dish.PriceOptions != null && dish.PriceOptions.Count > 0)
                            {
                                <select name="size" class="form-select mb-1">
                                    @foreach (var option in dish.PriceOptions)
                                    {
                                        <option value="@option.Size">@option.Size - @option.Price.ToString("C", new System.Globalization.CultureInfo("de-DE"))</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <input type="hidden" name="size" value="default" />
                                <p class="mb-0"><strong>@dish.Price.ToString("C", new System.Globalization.CultureInfo("de-DE"))</strong></p>
                            }

                            <button type="submit" class="btn btn-sm btn-primary">Add</button>
                        </form>
                    </div>
                </li>
            }
        </ul>
    </div>
}

<a asp-action="CartView" class="btn btn-success btn-sm mt-3 mb-5">Go to Your Cart!</a>

@section Scripts {
    <script>
               document.addEventListener("DOMContentLoaded", function () {
            // Toggle mở / đóng danh mục
            document.querySelectorAll('.toggle-category').forEach(function (button) {
                button.addEventListener('click', function () {
                    const categoryId = this.getAttribute('data-category');
                    const categoryContent = document.getElementById(categoryId);
                    const arrowIcon = this.querySelector('.category-arrow i');

                    categoryContent.classList.toggle('collapse-content-show');
                    arrowIcon.classList.toggle('rotate-180');
                });
            });

            // AJAX thêm vào giỏ hàng
            document.querySelectorAll(".add-to-cart-form").forEach(form => {
                form.addEventListener("submit", function (event) {
                    event.preventDefault();

                    let formData = new FormData(this);
                    fetch(this.action, {
                        method: "POST",
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Cập nhật badge giỏ hàng
                            let cartBadge = document.querySelector("#viewCartBtn .badge");
                            if (cartBadge) {
                                cartBadge.textContent = data.cartCount;
                            } else {
                                let newBadge = document.createElement("span");
                                newBadge.className = "badge bg-danger ms-2";
                                newBadge.textContent = data.cartCount;
                                document.querySelector("#viewCartBtn").appendChild(newBadge);
                            }

                            // Hiển thị thông báo đã thêm vào giỏ hàng
                            showToast(`✅ Added "${data.itemName}" to your cart!`);
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => console.error("Error adding to cart:", error));
                });
            });

            // Xem giỏ hàng (dùng modal)
            document.getElementById("viewCartBtn").addEventListener("click", function () {
                fetch('/Menu/GetCartItems')
                    .then(response => response.json())
                    .then(data => {
                        let content = '';

                        if (data.length === 0) {
                            content = '<p>Your Cart is Empty.</p>';
                        } else {
                            content += '<table class="table table-bordered">';
                            content += '<thead><tr><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr></thead>';
                            content += '<tbody>';

                            data.forEach(item => {
                                content += `
                                            <tr>
                                                <td>${item.name}</td>
                                                <td>${item.price.toLocaleString()} €</td>
                                                <td>${item.quantity}</td>
                                                <td>${(item.price * item.quantity).toLocaleString()} €</td>
                                            </tr>
                                        `;
                            });

                            content += '</tbody></table>';
                        }

                        document.getElementById("cartContent").innerHTML = content;

                        new bootstrap.Modal(document.getElementById("cartModal")).show();
                    })
                    .catch(error => console.error('Error Loading:', error));
            });
        });

        // Function to show a toast message
        function showToast(message) {
            const toastContainer = document.createElement('div');
            toastContainer.classList.add('toast-container');
            toastContainer.innerHTML = `
                <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `;

            document.body.appendChild(toastContainer);

            // Show the toast
            const toast = toastContainer.querySelector('.toast');
            new bootstrap.Toast(toast).show();

            // Remove the toast after it disappears
            toast.addEventListener('hidden.bs.toast', function () {
                toastContainer.remove();
            });
        }

    </script>
}
